<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A Small Note</title>
    <link>https://ekocahyo.github.io/</link>
    <description>Recent content on A Small Note</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2020, Eko Cahyo Authors; all rights reserved.</copyright>
    <lastBuildDate>Wed, 09 Apr 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ekocahyo.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nginx Server Block</title>
      <link>https://ekocahyo.github.io/how-to/web/nginx-server-block/</link>
      <pubDate>Wed, 28 Oct 2020 10:44:20 +0700</pubDate>
      
      <guid>https://ekocahyo.github.io/how-to/web/nginx-server-block/</guid>
      <description>Single server block Dalam 1 server hanya ada 1 website:
server { listen 80; server_name _; access_log logs/access.log main; root /path/to/site; } Multiple server block Dalam 1 server ada beberapa website:
server { listen 80; server_name domain1.tld; access_log logs/domain1.access.log main; root /path/to/domain1; } server { listen 80; server_name domain2.tld; access_log logs/domain2.access.log main; root /path/to/domain2; } server { listen 80; server_name domain3.tld; access_log logs/domain3.access.log main; root /path/to/domain3; } </description>
    </item>
    
    <item>
      <title>Nginx Redirect Http to Https</title>
      <link>https://ekocahyo.github.io/how-to/web/nginx-redirect-http-to-https/</link>
      <pubDate>Wed, 28 Oct 2020 08:55:55 +0700</pubDate>
      
      <guid>https://ekocahyo.github.io/how-to/web/nginx-redirect-http-to-https/</guid>
      <description>Redirect all site (HTTP) to HTTPS Semua server block yang ada pada nginx akan di arahkan ke https termasuk localhost. Buat 1 block config pada folder /etc/nginx/conf.d/http-to-http.conf. Isinya seperti ini:
server { listen 80 default_server; server_name _; return 301 https://$host$request_uri; } Redirect specific site (HTTP) to HTTPS Jika butuh untuk site tertentu. Maka tambahkan di block config yang ingin di redirect seperti ini:
server { listen 80; server_name domain.tld; return 301 https://domain.</description>
    </item>
    
    <item>
      <title>Install Apache on Centos 7</title>
      <link>https://ekocahyo.github.io/how-to/web/install-apache-on-centos-7/</link>
      <pubDate>Fri, 05 Jun 2020 22:11:50 +0700</pubDate>
      
      <guid>https://ekocahyo.github.io/how-to/web/install-apache-on-centos-7/</guid>
      <description>Install apache yum install -y httpd
Manajemen service apache  Testing apache config: httpd -t Memulai apache: systemctl start apache Menghentikan apache: systemctl stop apache Memuat ulang apache systemctl restart apache Load konfigurasi file apache: systemctl reload apache Mengaktifkan secara otomatis layanan apache saat booting: systemctl enable apache Nonaktifkan apache untuk memulai otomatis saat boot: systemctl disable apache  Struktur file konfigurasi apache / ├─ etc/ │ ├─ conf/ │ │ ├─ httpd.</description>
    </item>
    
    <item>
      <title>Install Nginx on Centos 7</title>
      <link>https://ekocahyo.github.io/how-to/web/install-nginx-on-centos-7/</link>
      <pubDate>Fri, 05 Jun 2020 22:11:50 +0700</pubDate>
      
      <guid>https://ekocahyo.github.io/how-to/web/install-nginx-on-centos-7/</guid>
      <description>Install Nginx Install dari repo epel yum install -y epel-repo &amp;amp;&amp;amp; yum install -y nginx
Install dari official repo nginx cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/yum.repos.d/nginx.repo [nginx-stable] name=nginx stable repobaseurl=http://nginx.org/packages/centos/$releasever/$basearch/ gpgcheck=1 enabled=1 gpgkey=https://nginx.org/keys/nginx_signing.key module_hotfixes=true EOF &amp;amp;&amp;amp; yum install -y nginx reference: repo nginx
Manajemen service nginx  Testing nginx config: nginx -t Memulai nginx: systemctl start nginx Menghentikan nginx: systemctl stop nginx Memuat ulang nginx systemctl restart nginx Load konfigurasi file nginx: systemctl reload nginx Mengaktifkan secara otomatis layanan nginx saat booting: systemctl enable nginx Nonaktifkan Nginx untuk memulai otomatis saat boot: systemctl disable nginx  Struktur file konfigurasi nginx / ├─ etc/ │ ├─ nginx.</description>
    </item>
    
    <item>
      <title>Hari Pertama Dengan Hugo</title>
      <link>https://ekocahyo.github.io/blog/hari-pertama-dengan-hugo/</link>
      <pubDate>Wed, 06 May 2020 11:23:44 +0700</pubDate>
      
      <guid>https://ekocahyo.github.io/blog/hari-pertama-dengan-hugo/</guid>
      <description>Hello World! Mungkin kata tersebut yang harus saya ucapkan pertamakali, seperti yang lainnya ketika berhasil menjalankan sesuatu (contoh xampp/apache). Ini pertama kalinya saya mencoba membuat blog dengan menggunakan generator web static dengan bahasa Go (Go lang). Awalnya saya coba menggunakan generator web static miliknya jekyll tapi selalu gagal dan saya rasa sulit untuk mempelajari bahasa rubby.
Intro Hugo Pertama kali saya coba Hugo, saya langsung di bikin jatuh hati. Salah satu yang bikin saya menyukainya adalah, ketika running servernya, dan saya ada edit content, tanpa perlu refresh browser, content sudah berubah sendiri.</description>
    </item>
    
    <item>
      <title>About Hugo</title>
      <link>https://ekocahyo.github.io/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://ekocahyo.github.io/about/</guid>
      <description>Hugo is the world’s fastest framework for building websites. It is written in Go.
It makes use of a variety of open source projects including:
 https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Learn more and contribute on GitHub.</description>
    </item>
    
  </channel>
</rss>